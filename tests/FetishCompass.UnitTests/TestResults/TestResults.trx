<?xml version="1.0" encoding="utf-8"?>
<TestRun id="473f0143-da88-41b8-bda2-06c4120fbfb7" name="@MacBook-Air-Tomasz 2025-09-11 21:40:57" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <Times creation="2025-09-11T21:40:57.3229980+02:00" queuing="2025-09-11T21:40:57.3229980+02:00" start="2025-09-11T21:40:56.6071050+02:00" finish="2025-09-11T21:40:57.3489940+02:00" />
  <TestSettings name="default" id="5d2cbf5d-7b0d-41c5-8d2e-2d6bceecd0f0">
    <Deployment runDeploymentRoot="_MacBook-Air-Tomasz_2025-09-11_21_40_57" />
  </TestSettings>
  <Results>
    <UnitTestResult executionId="f0279767-7024-41c4-bf0d-89e85cf6b82f" testId="62743efb-255b-a67f-2f10-bbff7bd16be3" testName="FetishCompass.UnitTests.Catalog.Commands.Handlers.CreateOccasionCommandHandlerTests.Handle_ValidCommand_SavesOccasionAndReturnsId" computerName="MacBook-Air-Tomasz" duration="00:00:00.0714360" startTime="2025-09-11T21:40:57.2570190+02:00" endTime="2025-09-11T21:40:57.2570190+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Passed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="f0279767-7024-41c4-bf0d-89e85cf6b82f" />
    <UnitTestResult executionId="eb65503d-7194-4ce6-b376-15e5cefee16f" testId="19f59c30-07a4-04a3-4b07-6c59c6993c66" testName="FetishCompass.UnitTests.Catalog.Commands.Handlers.CancelOccasionCommandHandlerTests.Handle_Exception_LogsAndThrows" computerName="MacBook-Air-Tomasz" duration="00:00:00.0065291" startTime="2025-09-11T21:40:57.2866520+02:00" endTime="2025-09-11T21:40:57.2866520+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="eb65503d-7194-4ce6-b376-15e5cefee16f">
      <Output>
        <ErrorInfo>
          <Message>System.ArgumentException : Can not instantiate proxy of class: FetishCompass.Domain.Catalog.Model.Occasion.
Could not find a parameterless constructor. (Parameter 'constructorArguments')
---- System.MissingMethodException : Constructor on type 'Castle.Proxies.OccasionProxy' not found.</Message>
          <StackTrace>   at Castle.DynamicProxy.ProxyGenerator.CreateClassProxyInstance(Type proxyType, List`1 proxyArguments, Type classToProxy, Object[] constructorArguments)
   at Castle.DynamicProxy.ProxyGenerator.CreateClassProxy(Type classToProxy, Type[] additionalInterfacesToProxy, ProxyGenerationOptions options, Object[] constructorArguments, IInterceptor[] interceptors)
   at NSubstitute.Proxies.CastleDynamicProxy.CastleDynamicProxyFactory.CreateProxyUsingCastleProxyGenerator(Type typeToProxy, Type[] additionalInterfaces, Object[] constructorArguments, IInterceptor[] interceptors, ProxyGenerationOptions proxyGenerationOptions)
   at NSubstitute.Proxies.CastleDynamicProxy.CastleDynamicProxyFactory.GenerateTypeProxy(ICallRouter callRouter, Type typeToProxy, Type[] additionalInterfaces, Object[] constructorArguments)
   at NSubstitute.Proxies.CastleDynamicProxy.CastleDynamicProxyFactory.GenerateProxy(ICallRouter callRouter, Type typeToProxy, Type[] additionalInterfaces, Object[] constructorArguments)
   at NSubstitute.Core.SubstituteFactory.Create(Type[] typesToProxy, Object[] constructorArguments, Boolean callBaseByDefault)
   at NSubstitute.Core.SubstituteFactory.Create(Type[] typesToProxy, Object[] constructorArguments)
   at NSubstitute.Substitute.For(Type[] typesToProxy, Object[] constructorArguments)
   at NSubstitute.Substitute.For[T](Object[] constructorArguments)
   at FetishCompass.UnitTests.Catalog.Commands.Handlers.CancelOccasionCommandHandlerTests.Handle_Exception_LogsAndThrows() in /Users/tomaszmolis/Projects/events-coordinator/tests/FetishCompass.UnitTests/Catalog/Commands/Handlers/CancelOccasionCommandHandlerTests.cs:line 59
--- End of stack trace from previous location ---
----- Inner Stack Trace -----
   at System.RuntimeType.CreateInstanceImpl(BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture)
   at Castle.DynamicProxy.ProxyGenerator.CreateClassProxyInstance(Type proxyType, List`1 proxyArguments, Type classToProxy, Object[] constructorArguments)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="dd28e85d-7f89-4c85-95c5-da3d2c10989e" testId="6a3f4dca-8f1e-53f3-547a-2c16f8ba7ef6" testName="FetishCompass.UnitTests.Catalog.Commands.Handlers.CreateOccasionCommandHandlerTests.Handle_Exception_LogsAndThrows" computerName="MacBook-Air-Tomasz" duration="00:00:00.0052719" startTime="2025-09-11T21:40:57.2648850+02:00" endTime="2025-09-11T21:40:57.2648850+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="dd28e85d-7f89-4c85-95c5-da3d2c10989e">
      <Output>
        <ErrorInfo>
          <Message>NSubstitute.Exceptions.ReceivedCallsException : Expected to receive a call matching:
	Log&lt;Object&gt;(Error, any EventId, o =&gt; o.ToString().Contains("Error creating occasion"), any Exception, any Func&lt;Object, Exception, String&gt;)
Actually received no matching calls.
</Message>
          <StackTrace>   at NSubstitute.Core.ReceivedCallsExceptionThrower.Throw(ICallSpecification callSpecification, IEnumerable`1 matchingCalls, IEnumerable`1 nonMatchingCalls, Quantity requiredQuantity)
   at NSubstitute.Routing.Handlers.CheckReceivedCallsHandler.Handle(ICall call)
   at NSubstitute.Routing.Route.Handle(ICall call)
   at NSubstitute.Core.CallRouter.Route(ICall call)
   at NSubstitute.Proxies.CastleDynamicProxy.CastleForwardingInterceptor.Intercept(IInvocation invocation)
   at Castle.DynamicProxy.AbstractInvocation.Proceed()
   at NSubstitute.Proxies.CastleDynamicProxy.ProxyIdInterceptor.Intercept(IInvocation invocation)
   at Castle.DynamicProxy.AbstractInvocation.Proceed()
   at Castle.Proxies.ObjectProxy_5.Log[TState](LogLevel logLevel, EventId eventId, TState state, Exception exception, Func`3 formatter)
   at FetishCompass.UnitTests.Catalog.Commands.Handlers.CreateOccasionCommandHandlerTests.Handle_Exception_LogsAndThrows() in /Users/tomaszmolis/Projects/events-coordinator/tests/FetishCompass.UnitTests/Catalog/Commands/Handlers/CreateOccasionCommandHandlerTests.cs:line 61
--- End of stack trace from previous location ---</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="c593c140-7f63-41ed-a592-6cd72e047669" testId="0459d822-f3a0-7aeb-292e-e1087ad6796f" testName="FetishCompass.UnitTests.Catalog.Commands.Handlers.ChangeOccasionVenueCommandHandlerTests.Handle_OccasionExists_ChangesVenueAndSaves" computerName="MacBook-Air-Tomasz" duration="00:00:00.0009122" startTime="2025-09-11T21:40:57.2564190+02:00" endTime="2025-09-11T21:40:57.2564190+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c593c140-7f63-41ed-a592-6cd72e047669">
      <Output>
        <ErrorInfo>
          <Message>System.ArgumentException : Can not instantiate proxy of class: FetishCompass.Domain.Catalog.Model.Occasion.
Could not find a parameterless constructor. (Parameter 'constructorArguments')
---- System.MissingMethodException : Constructor on type 'Castle.Proxies.OccasionProxy' not found.</Message>
          <StackTrace>   at Castle.DynamicProxy.ProxyGenerator.CreateClassProxyInstance(Type proxyType, List`1 proxyArguments, Type classToProxy, Object[] constructorArguments)
   at Castle.DynamicProxy.ProxyGenerator.CreateClassProxy(Type classToProxy, Type[] additionalInterfacesToProxy, ProxyGenerationOptions options, Object[] constructorArguments, IInterceptor[] interceptors)
   at NSubstitute.Proxies.CastleDynamicProxy.CastleDynamicProxyFactory.CreateProxyUsingCastleProxyGenerator(Type typeToProxy, Type[] additionalInterfaces, Object[] constructorArguments, IInterceptor[] interceptors, ProxyGenerationOptions proxyGenerationOptions)
   at NSubstitute.Proxies.CastleDynamicProxy.CastleDynamicProxyFactory.GenerateTypeProxy(ICallRouter callRouter, Type typeToProxy, Type[] additionalInterfaces, Object[] constructorArguments)
   at NSubstitute.Proxies.CastleDynamicProxy.CastleDynamicProxyFactory.GenerateProxy(ICallRouter callRouter, Type typeToProxy, Type[] additionalInterfaces, Object[] constructorArguments)
   at NSubstitute.Core.SubstituteFactory.Create(Type[] typesToProxy, Object[] constructorArguments, Boolean callBaseByDefault)
   at NSubstitute.Core.SubstituteFactory.Create(Type[] typesToProxy, Object[] constructorArguments)
   at NSubstitute.Substitute.For(Type[] typesToProxy, Object[] constructorArguments)
   at NSubstitute.Substitute.For[T](Object[] constructorArguments)
   at FetishCompass.UnitTests.Catalog.Commands.Handlers.ChangeOccasionVenueCommandHandlerTests.Handle_OccasionExists_ChangesVenueAndSaves() in /Users/tomaszmolis/Projects/events-coordinator/tests/FetishCompass.UnitTests/Catalog/Commands/Handlers/ChangeOccasionVenueCommandHandlerTests.cs:line 24
--- End of stack trace from previous location ---
----- Inner Stack Trace -----
   at System.RuntimeType.CreateInstanceImpl(BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture)
   at Castle.DynamicProxy.ProxyGenerator.CreateClassProxyInstance(Type proxyType, List`1 proxyArguments, Type classToProxy, Object[] constructorArguments)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="379d4fc5-5f46-49e9-a40c-94a390e6a298" testId="863074d4-7d0c-3268-cecc-74288a392bf2" testName="FetishCompass.UnitTests.Catalog.Commands.Handlers.ChangeOccasionScheduleCommandHandlerTests.Handle_Exception_LogsAndThrows" computerName="MacBook-Air-Tomasz" duration="00:00:00.0065216" startTime="2025-09-11T21:40:57.2870920+02:00" endTime="2025-09-11T21:40:57.2870920+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="379d4fc5-5f46-49e9-a40c-94a390e6a298">
      <Output>
        <ErrorInfo>
          <Message>System.ArgumentException : Can not instantiate proxy of class: FetishCompass.Domain.Catalog.Model.Occasion.
Could not find a parameterless constructor. (Parameter 'constructorArguments')
---- System.MissingMethodException : Constructor on type 'Castle.Proxies.OccasionProxy' not found.</Message>
          <StackTrace>   at Castle.DynamicProxy.ProxyGenerator.CreateClassProxyInstance(Type proxyType, List`1 proxyArguments, Type classToProxy, Object[] constructorArguments)
   at Castle.DynamicProxy.ProxyGenerator.CreateClassProxy(Type classToProxy, Type[] additionalInterfacesToProxy, ProxyGenerationOptions options, Object[] constructorArguments, IInterceptor[] interceptors)
   at NSubstitute.Proxies.CastleDynamicProxy.CastleDynamicProxyFactory.CreateProxyUsingCastleProxyGenerator(Type typeToProxy, Type[] additionalInterfaces, Object[] constructorArguments, IInterceptor[] interceptors, ProxyGenerationOptions proxyGenerationOptions)
   at NSubstitute.Proxies.CastleDynamicProxy.CastleDynamicProxyFactory.GenerateTypeProxy(ICallRouter callRouter, Type typeToProxy, Type[] additionalInterfaces, Object[] constructorArguments)
   at NSubstitute.Proxies.CastleDynamicProxy.CastleDynamicProxyFactory.GenerateProxy(ICallRouter callRouter, Type typeToProxy, Type[] additionalInterfaces, Object[] constructorArguments)
   at NSubstitute.Core.SubstituteFactory.Create(Type[] typesToProxy, Object[] constructorArguments, Boolean callBaseByDefault)
   at NSubstitute.Core.SubstituteFactory.Create(Type[] typesToProxy, Object[] constructorArguments)
   at NSubstitute.Substitute.For(Type[] typesToProxy, Object[] constructorArguments)
   at NSubstitute.Substitute.For[T](Object[] constructorArguments)
   at FetishCompass.UnitTests.Catalog.Commands.Handlers.ChangeOccasionScheduleCommandHandlerTests.Handle_Exception_LogsAndThrows() in /Users/tomaszmolis/Projects/events-coordinator/tests/FetishCompass.UnitTests/Catalog/Commands/Handlers/ChangeOccasionScheduleCommandHandlerTests.cs:line 62
--- End of stack trace from previous location ---
----- Inner Stack Trace -----
   at System.RuntimeType.CreateInstanceImpl(BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture)
   at Castle.DynamicProxy.ProxyGenerator.CreateClassProxyInstance(Type proxyType, List`1 proxyArguments, Type classToProxy, Object[] constructorArguments)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="be22d980-c3ab-4349-b007-d47517939627" testId="e000adb7-ebe0-ccee-1284-cba4f3008c2c" testName="FetishCompass.UnitTests.Catalog.Commands.Handlers.ChangeOccasionScheduleCommandHandlerTests.Handle_OccasionExists_ChangesScheduleAndSaves" computerName="MacBook-Air-Tomasz" duration="00:00:00.0017201" startTime="2025-09-11T21:40:57.2888240+02:00" endTime="2025-09-11T21:40:57.2888250+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="be22d980-c3ab-4349-b007-d47517939627">
      <Output>
        <ErrorInfo>
          <Message>System.ArgumentException : Can not instantiate proxy of class: FetishCompass.Domain.Catalog.Model.Occasion.
Could not find a parameterless constructor. (Parameter 'constructorArguments')
---- System.MissingMethodException : Constructor on type 'Castle.Proxies.OccasionProxy' not found.</Message>
          <StackTrace>   at Castle.DynamicProxy.ProxyGenerator.CreateClassProxyInstance(Type proxyType, List`1 proxyArguments, Type classToProxy, Object[] constructorArguments)
   at Castle.DynamicProxy.ProxyGenerator.CreateClassProxy(Type classToProxy, Type[] additionalInterfacesToProxy, ProxyGenerationOptions options, Object[] constructorArguments, IInterceptor[] interceptors)
   at NSubstitute.Proxies.CastleDynamicProxy.CastleDynamicProxyFactory.CreateProxyUsingCastleProxyGenerator(Type typeToProxy, Type[] additionalInterfaces, Object[] constructorArguments, IInterceptor[] interceptors, ProxyGenerationOptions proxyGenerationOptions)
   at NSubstitute.Proxies.CastleDynamicProxy.CastleDynamicProxyFactory.GenerateTypeProxy(ICallRouter callRouter, Type typeToProxy, Type[] additionalInterfaces, Object[] constructorArguments)
   at NSubstitute.Proxies.CastleDynamicProxy.CastleDynamicProxyFactory.GenerateProxy(ICallRouter callRouter, Type typeToProxy, Type[] additionalInterfaces, Object[] constructorArguments)
   at NSubstitute.Core.SubstituteFactory.Create(Type[] typesToProxy, Object[] constructorArguments, Boolean callBaseByDefault)
   at NSubstitute.Core.SubstituteFactory.Create(Type[] typesToProxy, Object[] constructorArguments)
   at NSubstitute.Substitute.For(Type[] typesToProxy, Object[] constructorArguments)
   at NSubstitute.Substitute.For[T](Object[] constructorArguments)
   at FetishCompass.UnitTests.Catalog.Commands.Handlers.ChangeOccasionScheduleCommandHandlerTests.Handle_OccasionExists_ChangesScheduleAndSaves() in /Users/tomaszmolis/Projects/events-coordinator/tests/FetishCompass.UnitTests/Catalog/Commands/Handlers/ChangeOccasionScheduleCommandHandlerTests.cs:line 24
--- End of stack trace from previous location ---
----- Inner Stack Trace -----
   at System.RuntimeType.CreateInstanceImpl(BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture)
   at Castle.DynamicProxy.ProxyGenerator.CreateClassProxyInstance(Type proxyType, List`1 proxyArguments, Type classToProxy, Object[] constructorArguments)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="2ac87933-4bb8-4608-97f0-9a93b576bfc8" testId="4d316dfb-68ea-f316-839c-391037893ede" testName="FetishCompass.UnitTests.Catalog.Commands.Handlers.ChangeOccasionScheduleCommandHandlerTests.Handle_OccasionNotFound_ThrowsAndLogs" computerName="MacBook-Air-Tomasz" duration="00:00:00.0765682" startTime="2025-09-11T21:40:57.2860780+02:00" endTime="2025-09-11T21:40:57.2860780+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="2ac87933-4bb8-4608-97f0-9a93b576bfc8">
      <Output>
        <ErrorInfo>
          <Message>NSubstitute.Exceptions.ReceivedCallsException : Expected to receive a call matching:
	Log&lt;Object&gt;(Warning, any EventId, o =&gt; o.ToString().Contains("not found"), &lt;null&gt;, any Func&lt;Object, Exception, String&gt;)
Actually received no matching calls.
</Message>
          <StackTrace>   at NSubstitute.Core.ReceivedCallsExceptionThrower.Throw(ICallSpecification callSpecification, IEnumerable`1 matchingCalls, IEnumerable`1 nonMatchingCalls, Quantity requiredQuantity)
   at NSubstitute.Routing.Handlers.CheckReceivedCallsHandler.Handle(ICall call)
   at NSubstitute.Routing.Route.Handle(ICall call)
   at NSubstitute.Core.CallRouter.Route(ICall call)
   at NSubstitute.Proxies.CastleDynamicProxy.CastleForwardingInterceptor.Intercept(IInvocation invocation)
   at Castle.DynamicProxy.AbstractInvocation.Proceed()
   at NSubstitute.Proxies.CastleDynamicProxy.ProxyIdInterceptor.Intercept(IInvocation invocation)
   at Castle.DynamicProxy.AbstractInvocation.Proceed()
   at Castle.Proxies.ObjectProxy_3.Log[TState](LogLevel logLevel, EventId eventId, TState state, Exception exception, Func`3 formatter)
   at FetishCompass.UnitTests.Catalog.Commands.Handlers.ChangeOccasionScheduleCommandHandlerTests.Handle_OccasionNotFound_ThrowsAndLogs() in /Users/tomaszmolis/Projects/events-coordinator/tests/FetishCompass.UnitTests/Catalog/Commands/Handlers/ChangeOccasionScheduleCommandHandlerTests.cs:line 47
--- End of stack trace from previous location ---</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="26fd94e9-9796-41e6-8f54-b966a38cdf48" testId="d0a1377e-9825-98bd-a79e-d38e1b1d3ff8" testName="FetishCompass.UnitTests.Catalog.Commands.Handlers.UpdateOccasionDetailCommandHandlerTests.Handle_Exception_LogsAndThrows" computerName="MacBook-Air-Tomasz" duration="00:00:00.0023224" startTime="2025-09-11T21:40:57.2893140+02:00" endTime="2025-09-11T21:40:57.2893140+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="26fd94e9-9796-41e6-8f54-b966a38cdf48">
      <Output>
        <ErrorInfo>
          <Message>System.ArgumentException : Can not instantiate proxy of class: FetishCompass.Domain.Catalog.Model.Occasion.
Could not find a parameterless constructor. (Parameter 'constructorArguments')
---- System.MissingMethodException : Constructor on type 'Castle.Proxies.OccasionProxy' not found.</Message>
          <StackTrace>   at Castle.DynamicProxy.ProxyGenerator.CreateClassProxyInstance(Type proxyType, List`1 proxyArguments, Type classToProxy, Object[] constructorArguments)
   at Castle.DynamicProxy.ProxyGenerator.CreateClassProxy(Type classToProxy, Type[] additionalInterfacesToProxy, ProxyGenerationOptions options, Object[] constructorArguments, IInterceptor[] interceptors)
   at NSubstitute.Proxies.CastleDynamicProxy.CastleDynamicProxyFactory.CreateProxyUsingCastleProxyGenerator(Type typeToProxy, Type[] additionalInterfaces, Object[] constructorArguments, IInterceptor[] interceptors, ProxyGenerationOptions proxyGenerationOptions)
   at NSubstitute.Proxies.CastleDynamicProxy.CastleDynamicProxyFactory.GenerateTypeProxy(ICallRouter callRouter, Type typeToProxy, Type[] additionalInterfaces, Object[] constructorArguments)
   at NSubstitute.Proxies.CastleDynamicProxy.CastleDynamicProxyFactory.GenerateProxy(ICallRouter callRouter, Type typeToProxy, Type[] additionalInterfaces, Object[] constructorArguments)
   at NSubstitute.Core.SubstituteFactory.Create(Type[] typesToProxy, Object[] constructorArguments, Boolean callBaseByDefault)
   at NSubstitute.Core.SubstituteFactory.Create(Type[] typesToProxy, Object[] constructorArguments)
   at NSubstitute.Substitute.For(Type[] typesToProxy, Object[] constructorArguments)
   at NSubstitute.Substitute.For[T](Object[] constructorArguments)
   at FetishCompass.UnitTests.Catalog.Commands.Handlers.UpdateOccasionDetailCommandHandlerTests.Handle_Exception_LogsAndThrows() in /Users/tomaszmolis/Projects/events-coordinator/tests/FetishCompass.UnitTests/Catalog/Commands/Handlers/UpdateOccasionDetailCommandHandlerTests.cs:line 59
--- End of stack trace from previous location ---
----- Inner Stack Trace -----
   at System.RuntimeType.CreateInstanceImpl(BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture)
   at Castle.DynamicProxy.ProxyGenerator.CreateClassProxyInstance(Type proxyType, List`1 proxyArguments, Type classToProxy, Object[] constructorArguments)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="16abc164-2e97-4127-8d7f-7a228c882744" testId="bc4a17c5-999e-cfcf-a4c2-b12943e3c6ae" testName="FetishCompass.UnitTests.Catalog.Commands.Handlers.CancelOccasionCommandHandlerTests.Handle_OccasionNotFound_ThrowsAndLogs" computerName="MacBook-Air-Tomasz" duration="00:00:00.0765633" startTime="2025-09-11T21:40:57.2641690+02:00" endTime="2025-09-11T21:40:57.2641690+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="16abc164-2e97-4127-8d7f-7a228c882744">
      <Output>
        <ErrorInfo>
          <Message>NSubstitute.Exceptions.ReceivedCallsException : Expected to receive a call matching:
	Log&lt;Object&gt;(Warning, any EventId, o =&gt; o.ToString().Contains("not found"), &lt;null&gt;, any Func&lt;Object, Exception, String&gt;)
Actually received no matching calls.
</Message>
          <StackTrace>   at NSubstitute.Core.ReceivedCallsExceptionThrower.Throw(ICallSpecification callSpecification, IEnumerable`1 matchingCalls, IEnumerable`1 nonMatchingCalls, Quantity requiredQuantity)
   at NSubstitute.Routing.Handlers.CheckReceivedCallsHandler.Handle(ICall call)
   at NSubstitute.Routing.Route.Handle(ICall call)
   at NSubstitute.Core.CallRouter.Route(ICall call)
   at NSubstitute.Proxies.CastleDynamicProxy.CastleForwardingInterceptor.Intercept(IInvocation invocation)
   at Castle.DynamicProxy.AbstractInvocation.Proceed()
   at NSubstitute.Proxies.CastleDynamicProxy.ProxyIdInterceptor.Intercept(IInvocation invocation)
   at Castle.DynamicProxy.AbstractInvocation.Proceed()
   at Castle.Proxies.ObjectProxy_1.Log[TState](LogLevel logLevel, EventId eventId, TState state, Exception exception, Func`3 formatter)
   at FetishCompass.UnitTests.Catalog.Commands.Handlers.CancelOccasionCommandHandlerTests.Handle_OccasionNotFound_ThrowsAndLogs() in /Users/tomaszmolis/Projects/events-coordinator/tests/FetishCompass.UnitTests/Catalog/Commands/Handlers/CancelOccasionCommandHandlerTests.cs:line 44
--- End of stack trace from previous location ---</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="1731b0d1-254f-4af0-9518-ce7bbead4d82" testId="8705f00d-382f-37e0-36d5-4f435467d0c0" testName="FetishCompass.UnitTests.Catalog.Commands.Handlers.UpdateOccasionDetailCommandHandlerTests.Handle_OccasionNotFound_ThrowsAndLogs" computerName="MacBook-Air-Tomasz" duration="00:00:00.0767005" startTime="2025-09-11T21:40:57.2637770+02:00" endTime="2025-09-11T21:40:57.2637770+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="1731b0d1-254f-4af0-9518-ce7bbead4d82">
      <Output>
        <ErrorInfo>
          <Message>NSubstitute.Exceptions.ReceivedCallsException : Expected to receive a call matching:
	Log&lt;Object&gt;(Warning, any EventId, o =&gt; o.ToString().Contains("not found"), &lt;null&gt;, any Func&lt;Object, Exception, String&gt;)
Actually received no matching calls.
</Message>
          <StackTrace>   at NSubstitute.Core.ReceivedCallsExceptionThrower.Throw(ICallSpecification callSpecification, IEnumerable`1 matchingCalls, IEnumerable`1 nonMatchingCalls, Quantity requiredQuantity)
   at NSubstitute.Routing.Handlers.CheckReceivedCallsHandler.Handle(ICall call)
   at NSubstitute.Routing.Route.Handle(ICall call)
   at NSubstitute.Core.CallRouter.Route(ICall call)
   at NSubstitute.Proxies.CastleDynamicProxy.CastleForwardingInterceptor.Intercept(IInvocation invocation)
   at Castle.DynamicProxy.AbstractInvocation.Proceed()
   at NSubstitute.Proxies.CastleDynamicProxy.ProxyIdInterceptor.Intercept(IInvocation invocation)
   at Castle.DynamicProxy.AbstractInvocation.Proceed()
   at Castle.Proxies.ObjectProxy_4.Log[TState](LogLevel logLevel, EventId eventId, TState state, Exception exception, Func`3 formatter)
   at FetishCompass.UnitTests.Catalog.Commands.Handlers.UpdateOccasionDetailCommandHandlerTests.Handle_OccasionNotFound_ThrowsAndLogs() in /Users/tomaszmolis/Projects/events-coordinator/tests/FetishCompass.UnitTests/Catalog/Commands/Handlers/UpdateOccasionDetailCommandHandlerTests.cs:line 44
--- End of stack trace from previous location ---</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="91dd71eb-9d63-4e6f-9898-9084bd719698" testId="bb00c0d8-c7f0-33c1-4e0f-30adb75cd87d" testName="FetishCompass.UnitTests.Catalog.Commands.Handlers.CancelOccasionCommandHandlerTests.Handle_OccasionExists_CancelsAndSaves" computerName="MacBook-Air-Tomasz" duration="00:00:00.0013075" startTime="2025-09-11T21:40:57.2882840+02:00" endTime="2025-09-11T21:40:57.2882840+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="91dd71eb-9d63-4e6f-9898-9084bd719698">
      <Output>
        <ErrorInfo>
          <Message>System.ArgumentException : Can not instantiate proxy of class: FetishCompass.Domain.Catalog.Model.Occasion.
Could not find a parameterless constructor. (Parameter 'constructorArguments')
---- System.MissingMethodException : Constructor on type 'Castle.Proxies.OccasionProxy' not found.</Message>
          <StackTrace>   at Castle.DynamicProxy.ProxyGenerator.CreateClassProxyInstance(Type proxyType, List`1 proxyArguments, Type classToProxy, Object[] constructorArguments)
   at Castle.DynamicProxy.ProxyGenerator.CreateClassProxy(Type classToProxy, Type[] additionalInterfacesToProxy, ProxyGenerationOptions options, Object[] constructorArguments, IInterceptor[] interceptors)
   at NSubstitute.Proxies.CastleDynamicProxy.CastleDynamicProxyFactory.CreateProxyUsingCastleProxyGenerator(Type typeToProxy, Type[] additionalInterfaces, Object[] constructorArguments, IInterceptor[] interceptors, ProxyGenerationOptions proxyGenerationOptions)
   at NSubstitute.Proxies.CastleDynamicProxy.CastleDynamicProxyFactory.GenerateTypeProxy(ICallRouter callRouter, Type typeToProxy, Type[] additionalInterfaces, Object[] constructorArguments)
   at NSubstitute.Proxies.CastleDynamicProxy.CastleDynamicProxyFactory.GenerateProxy(ICallRouter callRouter, Type typeToProxy, Type[] additionalInterfaces, Object[] constructorArguments)
   at NSubstitute.Core.SubstituteFactory.Create(Type[] typesToProxy, Object[] constructorArguments, Boolean callBaseByDefault)
   at NSubstitute.Core.SubstituteFactory.Create(Type[] typesToProxy, Object[] constructorArguments)
   at NSubstitute.Substitute.For(Type[] typesToProxy, Object[] constructorArguments)
   at NSubstitute.Substitute.For[T](Object[] constructorArguments)
   at FetishCompass.UnitTests.Catalog.Commands.Handlers.CancelOccasionCommandHandlerTests.Handle_OccasionExists_CancelsAndSaves() in /Users/tomaszmolis/Projects/events-coordinator/tests/FetishCompass.UnitTests/Catalog/Commands/Handlers/CancelOccasionCommandHandlerTests.cs:line 23
--- End of stack trace from previous location ---
----- Inner Stack Trace -----
   at System.RuntimeType.CreateInstanceImpl(BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture)
   at Castle.DynamicProxy.ProxyGenerator.CreateClassProxyInstance(Type proxyType, List`1 proxyArguments, Type classToProxy, Object[] constructorArguments)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="8ed26181-6db5-4835-ac0a-daff1e74e62a" testId="30534f33-9e89-9afb-3df6-b2089c7d9abd" testName="FetishCompass.UnitTests.Catalog.Commands.Handlers.ChangeOccasionVenueCommandHandlerTests.Handle_OccasionNotFound_ThrowsAndLogs" computerName="MacBook-Air-Tomasz" duration="00:00:00.0069422" startTime="2025-09-11T21:40:57.2645160+02:00" endTime="2025-09-11T21:40:57.2645160+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="8ed26181-6db5-4835-ac0a-daff1e74e62a">
      <Output>
        <ErrorInfo>
          <Message>NSubstitute.Exceptions.ReceivedCallsException : Expected to receive a call matching:
	Log&lt;Object&gt;(Warning, any EventId, o =&gt; o.ToString().Contains("not found"), &lt;null&gt;, any Func&lt;Object, Exception, String&gt;)
Actually received no matching calls.
</Message>
          <StackTrace>   at NSubstitute.Core.ReceivedCallsExceptionThrower.Throw(ICallSpecification callSpecification, IEnumerable`1 matchingCalls, IEnumerable`1 nonMatchingCalls, Quantity requiredQuantity)
   at NSubstitute.Routing.Handlers.CheckReceivedCallsHandler.Handle(ICall call)
   at NSubstitute.Routing.Route.Handle(ICall call)
   at NSubstitute.Core.CallRouter.Route(ICall call)
   at NSubstitute.Proxies.CastleDynamicProxy.CastleForwardingInterceptor.Intercept(IInvocation invocation)
   at Castle.DynamicProxy.AbstractInvocation.Proceed()
   at NSubstitute.Proxies.CastleDynamicProxy.ProxyIdInterceptor.Intercept(IInvocation invocation)
   at Castle.DynamicProxy.AbstractInvocation.Proceed()
   at Castle.Proxies.ObjectProxy_2.Log[TState](LogLevel logLevel, EventId eventId, TState state, Exception exception, Func`3 formatter)
   at FetishCompass.UnitTests.Catalog.Commands.Handlers.ChangeOccasionVenueCommandHandlerTests.Handle_OccasionNotFound_ThrowsAndLogs() in /Users/tomaszmolis/Projects/events-coordinator/tests/FetishCompass.UnitTests/Catalog/Commands/Handlers/ChangeOccasionVenueCommandHandlerTests.cs:line 46
--- End of stack trace from previous location ---</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="8001012c-db22-4770-81c9-4f86404e3c28" testId="0c071908-cdfb-d1ee-985d-e21b00c5a521" testName="FetishCompass.UnitTests.Catalog.Commands.Handlers.UpdateOccasionDetailCommandHandlerTests.Handle_OccasionExists_UpdatesAndSaves" computerName="MacBook-Air-Tomasz" duration="00:00:00.0069549" startTime="2025-09-11T21:40:57.2876750+02:00" endTime="2025-09-11T21:40:57.2876750+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="8001012c-db22-4770-81c9-4f86404e3c28">
      <Output>
        <ErrorInfo>
          <Message>System.ArgumentException : Can not instantiate proxy of class: FetishCompass.Domain.Catalog.Model.Occasion.
Could not find a parameterless constructor. (Parameter 'constructorArguments')
---- System.MissingMethodException : Constructor on type 'Castle.Proxies.OccasionProxy' not found.</Message>
          <StackTrace>   at Castle.DynamicProxy.ProxyGenerator.CreateClassProxyInstance(Type proxyType, List`1 proxyArguments, Type classToProxy, Object[] constructorArguments)
   at Castle.DynamicProxy.ProxyGenerator.CreateClassProxy(Type classToProxy, Type[] additionalInterfacesToProxy, ProxyGenerationOptions options, Object[] constructorArguments, IInterceptor[] interceptors)
   at NSubstitute.Proxies.CastleDynamicProxy.CastleDynamicProxyFactory.CreateProxyUsingCastleProxyGenerator(Type typeToProxy, Type[] additionalInterfaces, Object[] constructorArguments, IInterceptor[] interceptors, ProxyGenerationOptions proxyGenerationOptions)
   at NSubstitute.Proxies.CastleDynamicProxy.CastleDynamicProxyFactory.GenerateTypeProxy(ICallRouter callRouter, Type typeToProxy, Type[] additionalInterfaces, Object[] constructorArguments)
   at NSubstitute.Proxies.CastleDynamicProxy.CastleDynamicProxyFactory.GenerateProxy(ICallRouter callRouter, Type typeToProxy, Type[] additionalInterfaces, Object[] constructorArguments)
   at NSubstitute.Core.SubstituteFactory.Create(Type[] typesToProxy, Object[] constructorArguments, Boolean callBaseByDefault)
   at NSubstitute.Core.SubstituteFactory.Create(Type[] typesToProxy, Object[] constructorArguments)
   at NSubstitute.Substitute.For(Type[] typesToProxy, Object[] constructorArguments)
   at NSubstitute.Substitute.For[T](Object[] constructorArguments)
   at FetishCompass.UnitTests.Catalog.Commands.Handlers.UpdateOccasionDetailCommandHandlerTests.Handle_OccasionExists_UpdatesAndSaves() in /Users/tomaszmolis/Projects/events-coordinator/tests/FetishCompass.UnitTests/Catalog/Commands/Handlers/UpdateOccasionDetailCommandHandlerTests.cs:line 23
--- End of stack trace from previous location ---
----- Inner Stack Trace -----
   at System.RuntimeType.CreateInstanceImpl(BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture)
   at Castle.DynamicProxy.ProxyGenerator.CreateClassProxyInstance(Type proxyType, List`1 proxyArguments, Type classToProxy, Object[] constructorArguments)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="77ec1ea8-2008-4a00-8482-7d0431c1a6c5" testId="9b389d35-4aed-ea1a-b914-ed2f3f13b19b" testName="FetishCompass.UnitTests.Catalog.Commands.Handlers.ChangeOccasionVenueCommandHandlerTests.Handle_Exception_LogsAndThrows" computerName="MacBook-Air-Tomasz" duration="00:00:00.0595401" startTime="2025-09-11T21:40:57.2530620+02:00" endTime="2025-09-11T21:40:57.2531080+02:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="77ec1ea8-2008-4a00-8482-7d0431c1a6c5">
      <Output>
        <ErrorInfo>
          <Message>System.ArgumentException : Can not instantiate proxy of class: FetishCompass.Domain.Catalog.Model.Occasion.
Could not find a parameterless constructor. (Parameter 'constructorArguments')
---- System.MissingMethodException : Constructor on type 'Castle.Proxies.OccasionProxy' not found.</Message>
          <StackTrace>   at Castle.DynamicProxy.ProxyGenerator.CreateClassProxyInstance(Type proxyType, List`1 proxyArguments, Type classToProxy, Object[] constructorArguments)
   at Castle.DynamicProxy.ProxyGenerator.CreateClassProxy(Type classToProxy, Type[] additionalInterfacesToProxy, ProxyGenerationOptions options, Object[] constructorArguments, IInterceptor[] interceptors)
   at NSubstitute.Proxies.CastleDynamicProxy.CastleDynamicProxyFactory.CreateProxyUsingCastleProxyGenerator(Type typeToProxy, Type[] additionalInterfaces, Object[] constructorArguments, IInterceptor[] interceptors, ProxyGenerationOptions proxyGenerationOptions)
   at NSubstitute.Proxies.CastleDynamicProxy.CastleDynamicProxyFactory.GenerateTypeProxy(ICallRouter callRouter, Type typeToProxy, Type[] additionalInterfaces, Object[] constructorArguments)
   at NSubstitute.Proxies.CastleDynamicProxy.CastleDynamicProxyFactory.GenerateProxy(ICallRouter callRouter, Type typeToProxy, Type[] additionalInterfaces, Object[] constructorArguments)
   at NSubstitute.Core.SubstituteFactory.Create(Type[] typesToProxy, Object[] constructorArguments, Boolean callBaseByDefault)
   at NSubstitute.Core.SubstituteFactory.Create(Type[] typesToProxy, Object[] constructorArguments)
   at NSubstitute.Substitute.For(Type[] typesToProxy, Object[] constructorArguments)
   at NSubstitute.Substitute.For[T](Object[] constructorArguments)
   at FetishCompass.UnitTests.Catalog.Commands.Handlers.ChangeOccasionVenueCommandHandlerTests.Handle_Exception_LogsAndThrows() in /Users/tomaszmolis/Projects/events-coordinator/tests/FetishCompass.UnitTests/Catalog/Commands/Handlers/ChangeOccasionVenueCommandHandlerTests.cs:line 62
--- End of stack trace from previous location ---
----- Inner Stack Trace -----
   at System.RuntimeType.CreateInstanceImpl(BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture)
   at Castle.DynamicProxy.ProxyGenerator.CreateClassProxyInstance(Type proxyType, List`1 proxyArguments, Type classToProxy, Object[] constructorArguments)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
  </Results>
  <TestDefinitions>
    <UnitTest name="FetishCompass.UnitTests.Catalog.Commands.Handlers.CreateOccasionCommandHandlerTests.Handle_Exception_LogsAndThrows" storage="/users/tomaszmolis/projects/events-coordinator/tests/fetishcompass.unittests/bin/debug/net9.0/fetishcompass.unittests.dll" id="6a3f4dca-8f1e-53f3-547a-2c16f8ba7ef6">
      <Execution id="dd28e85d-7f89-4c85-95c5-da3d2c10989e" />
      <TestMethod codeBase="/Users/tomaszmolis/Projects/events-coordinator/tests/FetishCompass.UnitTests/bin/Debug/net9.0/FetishCompass.UnitTests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="FetishCompass.UnitTests.Catalog.Commands.Handlers.CreateOccasionCommandHandlerTests" name="Handle_Exception_LogsAndThrows" />
    </UnitTest>
    <UnitTest name="FetishCompass.UnitTests.Catalog.Commands.Handlers.ChangeOccasionScheduleCommandHandlerTests.Handle_Exception_LogsAndThrows" storage="/users/tomaszmolis/projects/events-coordinator/tests/fetishcompass.unittests/bin/debug/net9.0/fetishcompass.unittests.dll" id="863074d4-7d0c-3268-cecc-74288a392bf2">
      <Execution id="379d4fc5-5f46-49e9-a40c-94a390e6a298" />
      <TestMethod codeBase="/Users/tomaszmolis/Projects/events-coordinator/tests/FetishCompass.UnitTests/bin/Debug/net9.0/FetishCompass.UnitTests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="FetishCompass.UnitTests.Catalog.Commands.Handlers.ChangeOccasionScheduleCommandHandlerTests" name="Handle_Exception_LogsAndThrows" />
    </UnitTest>
    <UnitTest name="FetishCompass.UnitTests.Catalog.Commands.Handlers.ChangeOccasionScheduleCommandHandlerTests.Handle_OccasionNotFound_ThrowsAndLogs" storage="/users/tomaszmolis/projects/events-coordinator/tests/fetishcompass.unittests/bin/debug/net9.0/fetishcompass.unittests.dll" id="4d316dfb-68ea-f316-839c-391037893ede">
      <Execution id="2ac87933-4bb8-4608-97f0-9a93b576bfc8" />
      <TestMethod codeBase="/Users/tomaszmolis/Projects/events-coordinator/tests/FetishCompass.UnitTests/bin/Debug/net9.0/FetishCompass.UnitTests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="FetishCompass.UnitTests.Catalog.Commands.Handlers.ChangeOccasionScheduleCommandHandlerTests" name="Handle_OccasionNotFound_ThrowsAndLogs" />
    </UnitTest>
    <UnitTest name="FetishCompass.UnitTests.Catalog.Commands.Handlers.UpdateOccasionDetailCommandHandlerTests.Handle_OccasionNotFound_ThrowsAndLogs" storage="/users/tomaszmolis/projects/events-coordinator/tests/fetishcompass.unittests/bin/debug/net9.0/fetishcompass.unittests.dll" id="8705f00d-382f-37e0-36d5-4f435467d0c0">
      <Execution id="1731b0d1-254f-4af0-9518-ce7bbead4d82" />
      <TestMethod codeBase="/Users/tomaszmolis/Projects/events-coordinator/tests/FetishCompass.UnitTests/bin/Debug/net9.0/FetishCompass.UnitTests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="FetishCompass.UnitTests.Catalog.Commands.Handlers.UpdateOccasionDetailCommandHandlerTests" name="Handle_OccasionNotFound_ThrowsAndLogs" />
    </UnitTest>
    <UnitTest name="FetishCompass.UnitTests.Catalog.Commands.Handlers.UpdateOccasionDetailCommandHandlerTests.Handle_OccasionExists_UpdatesAndSaves" storage="/users/tomaszmolis/projects/events-coordinator/tests/fetishcompass.unittests/bin/debug/net9.0/fetishcompass.unittests.dll" id="0c071908-cdfb-d1ee-985d-e21b00c5a521">
      <Execution id="8001012c-db22-4770-81c9-4f86404e3c28" />
      <TestMethod codeBase="/Users/tomaszmolis/Projects/events-coordinator/tests/FetishCompass.UnitTests/bin/Debug/net9.0/FetishCompass.UnitTests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="FetishCompass.UnitTests.Catalog.Commands.Handlers.UpdateOccasionDetailCommandHandlerTests" name="Handle_OccasionExists_UpdatesAndSaves" />
    </UnitTest>
    <UnitTest name="FetishCompass.UnitTests.Catalog.Commands.Handlers.ChangeOccasionVenueCommandHandlerTests.Handle_OccasionExists_ChangesVenueAndSaves" storage="/users/tomaszmolis/projects/events-coordinator/tests/fetishcompass.unittests/bin/debug/net9.0/fetishcompass.unittests.dll" id="0459d822-f3a0-7aeb-292e-e1087ad6796f">
      <Execution id="c593c140-7f63-41ed-a592-6cd72e047669" />
      <TestMethod codeBase="/Users/tomaszmolis/Projects/events-coordinator/tests/FetishCompass.UnitTests/bin/Debug/net9.0/FetishCompass.UnitTests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="FetishCompass.UnitTests.Catalog.Commands.Handlers.ChangeOccasionVenueCommandHandlerTests" name="Handle_OccasionExists_ChangesVenueAndSaves" />
    </UnitTest>
    <UnitTest name="FetishCompass.UnitTests.Catalog.Commands.Handlers.CreateOccasionCommandHandlerTests.Handle_ValidCommand_SavesOccasionAndReturnsId" storage="/users/tomaszmolis/projects/events-coordinator/tests/fetishcompass.unittests/bin/debug/net9.0/fetishcompass.unittests.dll" id="62743efb-255b-a67f-2f10-bbff7bd16be3">
      <Execution id="f0279767-7024-41c4-bf0d-89e85cf6b82f" />
      <TestMethod codeBase="/Users/tomaszmolis/Projects/events-coordinator/tests/FetishCompass.UnitTests/bin/Debug/net9.0/FetishCompass.UnitTests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="FetishCompass.UnitTests.Catalog.Commands.Handlers.CreateOccasionCommandHandlerTests" name="Handle_ValidCommand_SavesOccasionAndReturnsId" />
    </UnitTest>
    <UnitTest name="FetishCompass.UnitTests.Catalog.Commands.Handlers.ChangeOccasionVenueCommandHandlerTests.Handle_Exception_LogsAndThrows" storage="/users/tomaszmolis/projects/events-coordinator/tests/fetishcompass.unittests/bin/debug/net9.0/fetishcompass.unittests.dll" id="9b389d35-4aed-ea1a-b914-ed2f3f13b19b">
      <Execution id="77ec1ea8-2008-4a00-8482-7d0431c1a6c5" />
      <TestMethod codeBase="/Users/tomaszmolis/Projects/events-coordinator/tests/FetishCompass.UnitTests/bin/Debug/net9.0/FetishCompass.UnitTests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="FetishCompass.UnitTests.Catalog.Commands.Handlers.ChangeOccasionVenueCommandHandlerTests" name="Handle_Exception_LogsAndThrows" />
    </UnitTest>
    <UnitTest name="FetishCompass.UnitTests.Catalog.Commands.Handlers.CancelOccasionCommandHandlerTests.Handle_OccasionExists_CancelsAndSaves" storage="/users/tomaszmolis/projects/events-coordinator/tests/fetishcompass.unittests/bin/debug/net9.0/fetishcompass.unittests.dll" id="bb00c0d8-c7f0-33c1-4e0f-30adb75cd87d">
      <Execution id="91dd71eb-9d63-4e6f-9898-9084bd719698" />
      <TestMethod codeBase="/Users/tomaszmolis/Projects/events-coordinator/tests/FetishCompass.UnitTests/bin/Debug/net9.0/FetishCompass.UnitTests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="FetishCompass.UnitTests.Catalog.Commands.Handlers.CancelOccasionCommandHandlerTests" name="Handle_OccasionExists_CancelsAndSaves" />
    </UnitTest>
    <UnitTest name="FetishCompass.UnitTests.Catalog.Commands.Handlers.ChangeOccasionScheduleCommandHandlerTests.Handle_OccasionExists_ChangesScheduleAndSaves" storage="/users/tomaszmolis/projects/events-coordinator/tests/fetishcompass.unittests/bin/debug/net9.0/fetishcompass.unittests.dll" id="e000adb7-ebe0-ccee-1284-cba4f3008c2c">
      <Execution id="be22d980-c3ab-4349-b007-d47517939627" />
      <TestMethod codeBase="/Users/tomaszmolis/Projects/events-coordinator/tests/FetishCompass.UnitTests/bin/Debug/net9.0/FetishCompass.UnitTests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="FetishCompass.UnitTests.Catalog.Commands.Handlers.ChangeOccasionScheduleCommandHandlerTests" name="Handle_OccasionExists_ChangesScheduleAndSaves" />
    </UnitTest>
    <UnitTest name="FetishCompass.UnitTests.Catalog.Commands.Handlers.CancelOccasionCommandHandlerTests.Handle_OccasionNotFound_ThrowsAndLogs" storage="/users/tomaszmolis/projects/events-coordinator/tests/fetishcompass.unittests/bin/debug/net9.0/fetishcompass.unittests.dll" id="bc4a17c5-999e-cfcf-a4c2-b12943e3c6ae">
      <Execution id="16abc164-2e97-4127-8d7f-7a228c882744" />
      <TestMethod codeBase="/Users/tomaszmolis/Projects/events-coordinator/tests/FetishCompass.UnitTests/bin/Debug/net9.0/FetishCompass.UnitTests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="FetishCompass.UnitTests.Catalog.Commands.Handlers.CancelOccasionCommandHandlerTests" name="Handle_OccasionNotFound_ThrowsAndLogs" />
    </UnitTest>
    <UnitTest name="FetishCompass.UnitTests.Catalog.Commands.Handlers.UpdateOccasionDetailCommandHandlerTests.Handle_Exception_LogsAndThrows" storage="/users/tomaszmolis/projects/events-coordinator/tests/fetishcompass.unittests/bin/debug/net9.0/fetishcompass.unittests.dll" id="d0a1377e-9825-98bd-a79e-d38e1b1d3ff8">
      <Execution id="26fd94e9-9796-41e6-8f54-b966a38cdf48" />
      <TestMethod codeBase="/Users/tomaszmolis/Projects/events-coordinator/tests/FetishCompass.UnitTests/bin/Debug/net9.0/FetishCompass.UnitTests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="FetishCompass.UnitTests.Catalog.Commands.Handlers.UpdateOccasionDetailCommandHandlerTests" name="Handle_Exception_LogsAndThrows" />
    </UnitTest>
    <UnitTest name="FetishCompass.UnitTests.Catalog.Commands.Handlers.CancelOccasionCommandHandlerTests.Handle_Exception_LogsAndThrows" storage="/users/tomaszmolis/projects/events-coordinator/tests/fetishcompass.unittests/bin/debug/net9.0/fetishcompass.unittests.dll" id="19f59c30-07a4-04a3-4b07-6c59c6993c66">
      <Execution id="eb65503d-7194-4ce6-b376-15e5cefee16f" />
      <TestMethod codeBase="/Users/tomaszmolis/Projects/events-coordinator/tests/FetishCompass.UnitTests/bin/Debug/net9.0/FetishCompass.UnitTests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="FetishCompass.UnitTests.Catalog.Commands.Handlers.CancelOccasionCommandHandlerTests" name="Handle_Exception_LogsAndThrows" />
    </UnitTest>
    <UnitTest name="FetishCompass.UnitTests.Catalog.Commands.Handlers.ChangeOccasionVenueCommandHandlerTests.Handle_OccasionNotFound_ThrowsAndLogs" storage="/users/tomaszmolis/projects/events-coordinator/tests/fetishcompass.unittests/bin/debug/net9.0/fetishcompass.unittests.dll" id="30534f33-9e89-9afb-3df6-b2089c7d9abd">
      <Execution id="8ed26181-6db5-4835-ac0a-daff1e74e62a" />
      <TestMethod codeBase="/Users/tomaszmolis/Projects/events-coordinator/tests/FetishCompass.UnitTests/bin/Debug/net9.0/FetishCompass.UnitTests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="FetishCompass.UnitTests.Catalog.Commands.Handlers.ChangeOccasionVenueCommandHandlerTests" name="Handle_OccasionNotFound_ThrowsAndLogs" />
    </UnitTest>
  </TestDefinitions>
  <TestEntries>
    <TestEntry testId="62743efb-255b-a67f-2f10-bbff7bd16be3" executionId="f0279767-7024-41c4-bf0d-89e85cf6b82f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="19f59c30-07a4-04a3-4b07-6c59c6993c66" executionId="eb65503d-7194-4ce6-b376-15e5cefee16f" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="6a3f4dca-8f1e-53f3-547a-2c16f8ba7ef6" executionId="dd28e85d-7f89-4c85-95c5-da3d2c10989e" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="0459d822-f3a0-7aeb-292e-e1087ad6796f" executionId="c593c140-7f63-41ed-a592-6cd72e047669" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="863074d4-7d0c-3268-cecc-74288a392bf2" executionId="379d4fc5-5f46-49e9-a40c-94a390e6a298" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e000adb7-ebe0-ccee-1284-cba4f3008c2c" executionId="be22d980-c3ab-4349-b007-d47517939627" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="4d316dfb-68ea-f316-839c-391037893ede" executionId="2ac87933-4bb8-4608-97f0-9a93b576bfc8" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="d0a1377e-9825-98bd-a79e-d38e1b1d3ff8" executionId="26fd94e9-9796-41e6-8f54-b966a38cdf48" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="bc4a17c5-999e-cfcf-a4c2-b12943e3c6ae" executionId="16abc164-2e97-4127-8d7f-7a228c882744" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8705f00d-382f-37e0-36d5-4f435467d0c0" executionId="1731b0d1-254f-4af0-9518-ce7bbead4d82" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="bb00c0d8-c7f0-33c1-4e0f-30adb75cd87d" executionId="91dd71eb-9d63-4e6f-9898-9084bd719698" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="30534f33-9e89-9afb-3df6-b2089c7d9abd" executionId="8ed26181-6db5-4835-ac0a-daff1e74e62a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="0c071908-cdfb-d1ee-985d-e21b00c5a521" executionId="8001012c-db22-4770-81c9-4f86404e3c28" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9b389d35-4aed-ea1a-b914-ed2f3f13b19b" executionId="77ec1ea8-2008-4a00-8482-7d0431c1a6c5" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <TestLists>
    <TestList name="Wyniki, których nie ma na liście" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="Wszystkie załadowane wyniki" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <ResultSummary outcome="Failed">
    <Counters total="14" executed="14" passed="1" failed="13" error="0" timeout="0" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" completed="0" inProgress="0" pending="0" />
    <Output>
      <StdOut>[xUnit.net 00:00:00.00] xUnit.net VSTest Adapter v2.8.2+699d445a1a (64-bit .NET 9.0.4)
[xUnit.net 00:00:00.06]   Discovering: FetishCompass.UnitTests
[xUnit.net 00:00:00.08]   Discovered:  FetishCompass.UnitTests
[xUnit.net 00:00:00.09]   Starting:    FetishCompass.UnitTests
[xUnit.net 00:00:00.19]       System.ArgumentException : Can not instantiate proxy of class: FetishCompass.Domain.Catalog.Model.Occasion.
[xUnit.net 00:00:00.19]       Could not find a parameterless constructor. (Parameter 'constructorArguments')
[xUnit.net 00:00:00.19]       ---- System.MissingMethodException : Constructor on type 'Castle.Proxies.OccasionProxy' not found.
[xUnit.net 00:00:00.19]       Stack Trace:
[xUnit.net 00:00:00.19]            at Castle.DynamicProxy.ProxyGenerator.CreateClassProxyInstance(Type proxyType, List`1 proxyArguments, Type classToProxy, Object[] constructorArguments)
[xUnit.net 00:00:00.19]            at Castle.DynamicProxy.ProxyGenerator.CreateClassProxy(Type classToProxy, Type[] additionalInterfacesToProxy, ProxyGenerationOptions options, Object[] constructorArguments, IInterceptor[] interceptors)
[xUnit.net 00:00:00.19]            at NSubstitute.Proxies.CastleDynamicProxy.CastleDynamicProxyFactory.CreateProxyUsingCastleProxyGenerator(Type typeToProxy, Type[] additionalInterfaces, Object[] constructorArguments, IInterceptor[] interceptors, ProxyGenerationOptions proxyGenerationOptions)
[xUnit.net 00:00:00.19]            at NSubstitute.Proxies.CastleDynamicProxy.CastleDynamicProxyFactory.GenerateTypeProxy(ICallRouter callRouter, Type typeToProxy, Type[] additionalInterfaces, Object[] constructorArguments)
[xUnit.net 00:00:00.19]            at NSubstitute.Proxies.CastleDynamicProxy.CastleDynamicProxyFactory.GenerateProxy(ICallRouter callRouter, Type typeToProxy, Type[] additionalInterfaces, Object[] constructorArguments)
[xUnit.net 00:00:00.19]            at NSubstitute.Core.SubstituteFactory.Create(Type[] typesToProxy, Object[] constructorArguments, Boolean callBaseByDefault)
[xUnit.net 00:00:00.19]            at NSubstitute.Core.SubstituteFactory.Create(Type[] typesToProxy, Object[] constructorArguments)
[xUnit.net 00:00:00.19]            at NSubstitute.Substitute.For(Type[] typesToProxy, Object[] constructorArguments)
[xUnit.net 00:00:00.19]            at NSubstitute.Substitute.For[T](Object[] constructorArguments)
[xUnit.net 00:00:00.19]         /Users/tomaszmolis/Projects/events-coordinator/tests/FetishCompass.UnitTests/Catalog/Commands/Handlers/ChangeOccasionVenueCommandHandlerTests.cs(62,0): at FetishCompass.UnitTests.Catalog.Commands.Handlers.ChangeOccasionVenueCommandHandlerTests.Handle_Exception_LogsAndThrows()
[xUnit.net 00:00:00.19]         --- End of stack trace from previous location ---
[xUnit.net 00:00:00.19]         ----- Inner Stack Trace -----
[xUnit.net 00:00:00.19]            at System.RuntimeType.CreateInstanceImpl(BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture)
[xUnit.net 00:00:00.19]            at Castle.DynamicProxy.ProxyGenerator.CreateClassProxyInstance(Type proxyType, List`1 proxyArguments, Type classToProxy, Object[] constructorArguments)
[xUnit.net 00:00:00.19]       System.ArgumentException : Can not instantiate proxy of class: FetishCompass.Domain.Catalog.Model.Occasion.
[xUnit.net 00:00:00.19]       Could not find a parameterless constructor. (Parameter 'constructorArguments')
[xUnit.net 00:00:00.19]       ---- System.MissingMethodException : Constructor on type 'Castle.Proxies.OccasionProxy' not found.
[xUnit.net 00:00:00.19]       Stack Trace:
[xUnit.net 00:00:00.19]            at Castle.DynamicProxy.ProxyGenerator.CreateClassProxyInstance(Type proxyType, List`1 proxyArguments, Type classToProxy, Object[] constructorArguments)
[xUnit.net 00:00:00.19]            at Castle.DynamicProxy.ProxyGenerator.CreateClassProxy(Type classToProxy, Type[] additionalInterfacesToProxy, ProxyGenerationOptions options, Object[] constructorArguments, IInterceptor[] interceptors)
[xUnit.net 00:00:00.19]            at NSubstitute.Proxies.CastleDynamicProxy.CastleDynamicProxyFactory.CreateProxyUsingCastleProxyGenerator(Type typeToProxy, Type[] additionalInterfaces, Object[] constructorArguments, IInterceptor[] interceptors, ProxyGenerationOptions proxyGenerationOptions)
[xUnit.net 00:00:00.19]            at NSubstitute.Proxies.CastleDynamicProxy.CastleDynamicProxyFactory.GenerateTypeProxy(ICallRouter callRouter, Type typeToProxy, Type[] additionalInterfaces, Object[] constructorArguments)
[xUnit.net 00:00:00.19]            at NSubstitute.Proxies.CastleDynamicProxy.CastleDynamicProxyFactory.GenerateProxy(ICallRouter callRouter, Type typeToProxy, Type[] additionalInterfaces, Object[] constructorArguments)
[xUnit.net 00:00:00.19]            at NSubstitute.Core.SubstituteFactory.Create(Type[] typesToProxy, Object[] constructorArguments, Boolean callBaseByDefault)
[xUnit.net 00:00:00.19]            at NSubstitute.Core.SubstituteFactory.Create(Type[] typesToProxy, Object[] constructorArguments)
[xUnit.net 00:00:00.19]            at NSubstitute.Substitute.For(Type[] typesToProxy, Object[] constructorArguments)
[xUnit.net 00:00:00.19]            at NSubstitute.Substitute.For[T](Object[] constructorArguments)
[xUnit.net 00:00:00.19]         /Users/tomaszmolis/Projects/events-coordinator/tests/FetishCompass.UnitTests/Catalog/Commands/Handlers/ChangeOccasionVenueCommandHandlerTests.cs(24,0): at FetishCompass.UnitTests.Catalog.Commands.Handlers.ChangeOccasionVenueCommandHandlerTests.Handle_OccasionExists_ChangesVenueAndSaves()
[xUnit.net 00:00:00.19]         --- End of stack trace from previous location ---
[xUnit.net 00:00:00.19]         ----- Inner Stack Trace -----
[xUnit.net 00:00:00.19]            at System.RuntimeType.CreateInstanceImpl(BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture)
[xUnit.net 00:00:00.19]            at Castle.DynamicProxy.ProxyGenerator.CreateClassProxyInstance(Type proxyType, List`1 proxyArguments, Type classToProxy, Object[] constructorArguments)
[xUnit.net 00:00:00.20]       NSubstitute.Exceptions.ReceivedCallsException : Expected to receive a call matching:
[xUnit.net 00:00:00.20]       	Log&lt;Object&gt;(Warning, any EventId, o =&gt; o.ToString().Contains("not found"), &lt;null&gt;, any Func&lt;Object, Exception, String&gt;)
[xUnit.net 00:00:00.20]       Actually received no matching calls.
[xUnit.net 00:00:00.20]       
[xUnit.net 00:00:00.20]       Stack Trace:
[xUnit.net 00:00:00.20]            at NSubstitute.Core.ReceivedCallsExceptionThrower.Throw(ICallSpecification callSpecification, IEnumerable`1 matchingCalls, IEnumerable`1 nonMatchingCalls, Quantity requiredQuantity)
[xUnit.net 00:00:00.20]            at NSubstitute.Routing.Handlers.CheckReceivedCallsHandler.Handle(ICall call)
[xUnit.net 00:00:00.20]            at NSubstitute.Routing.Route.Handle(ICall call)
[xUnit.net 00:00:00.20]            at NSubstitute.Core.CallRouter.Route(ICall call)
[xUnit.net 00:00:00.20]            at NSubstitute.Proxies.CastleDynamicProxy.CastleForwardingInterceptor.Intercept(IInvocation invocation)
[xUnit.net 00:00:00.20]            at Castle.DynamicProxy.AbstractInvocation.Proceed()
[xUnit.net 00:00:00.20]            at NSubstitute.Proxies.CastleDynamicProxy.ProxyIdInterceptor.Intercept(IInvocation invocation)
[xUnit.net 00:00:00.20]            at Castle.DynamicProxy.AbstractInvocation.Proceed()
[xUnit.net 00:00:00.20]            at Castle.Proxies.ObjectProxy_4.Log[TState](LogLevel logLevel, EventId eventId, TState state, Exception exception, Func`3 formatter)
[xUnit.net 00:00:00.20]         /Users/tomaszmolis/Projects/events-coordinator/tests/FetishCompass.UnitTests/Catalog/Commands/Handlers/UpdateOccasionDetailCommandHandlerTests.cs(44,0): at FetishCompass.UnitTests.Catalog.Commands.Handlers.UpdateOccasionDetailCommandHandlerTests.Handle_OccasionNotFound_ThrowsAndLogs()
[xUnit.net 00:00:00.20]         --- End of stack trace from previous location ---
[xUnit.net 00:00:00.20]       NSubstitute.Exceptions.ReceivedCallsException : Expected to receive a call matching:
[xUnit.net 00:00:00.20]       	Log&lt;Object&gt;(Warning, any EventId, o =&gt; o.ToString().Contains("not found"), &lt;null&gt;, any Func&lt;Object, Exception, String&gt;)
[xUnit.net 00:00:00.20]       Actually received no matching calls.
[xUnit.net 00:00:00.20]       
[xUnit.net 00:00:00.20]       Stack Trace:
[xUnit.net 00:00:00.20]            at NSubstitute.Core.ReceivedCallsExceptionThrower.Throw(ICallSpecification callSpecification, IEnumerable`1 matchingCalls, IEnumerable`1 nonMatchingCalls, Quantity requiredQuantity)
[xUnit.net 00:00:00.20]            at NSubstitute.Routing.Handlers.CheckReceivedCallsHandler.Handle(ICall call)
[xUnit.net 00:00:00.20]            at NSubstitute.Routing.Route.Handle(ICall call)
[xUnit.net 00:00:00.20]            at NSubstitute.Core.CallRouter.Route(ICall call)
[xUnit.net 00:00:00.20]            at NSubstitute.Proxies.CastleDynamicProxy.CastleForwardingInterceptor.Intercept(IInvocation invocation)
[xUnit.net 00:00:00.20]            at Castle.DynamicProxy.AbstractInvocation.Proceed()
[xUnit.net 00:00:00.20]            at NSubstitute.Proxies.CastleDynamicProxy.ProxyIdInterceptor.Intercept(IInvocation invocation)
[xUnit.net 00:00:00.20]            at Castle.DynamicProxy.AbstractInvocation.Proceed()
[xUnit.net 00:00:00.20]            at Castle.Proxies.ObjectProxy_1.Log[TState](LogLevel logLevel, EventId eventId, TState state, Exception exception, Func`3 formatter)
[xUnit.net 00:00:00.20]         /Users/tomaszmolis/Projects/events-coordinator/tests/FetishCompass.UnitTests/Catalog/Commands/Handlers/CancelOccasionCommandHandlerTests.cs(44,0): at FetishCompass.UnitTests.Catalog.Commands.Handlers.CancelOccasionCommandHandlerTests.Handle_OccasionNotFound_ThrowsAndLogs()
[xUnit.net 00:00:00.20]         --- End of stack trace from previous location ---
[xUnit.net 00:00:00.20]       NSubstitute.Exceptions.ReceivedCallsException : Expected to receive a call matching:
[xUnit.net 00:00:00.20]       	Log&lt;Object&gt;(Warning, any EventId, o =&gt; o.ToString().Contains("not found"), &lt;null&gt;, any Func&lt;Object, Exception, String&gt;)
[xUnit.net 00:00:00.20]       Actually received no matching calls.
[xUnit.net 00:00:00.20]       
[xUnit.net 00:00:00.20]       Stack Trace:
[xUnit.net 00:00:00.20]            at NSubstitute.Core.ReceivedCallsExceptionThrower.Throw(ICallSpecification callSpecification, IEnumerable`1 matchingCalls, IEnumerable`1 nonMatchingCalls, Quantity requiredQuantity)
[xUnit.net 00:00:00.20]            at NSubstitute.Routing.Handlers.CheckReceivedCallsHandler.Handle(ICall call)
[xUnit.net 00:00:00.20]            at NSubstitute.Routing.Route.Handle(ICall call)
[xUnit.net 00:00:00.20]            at NSubstitute.Core.CallRouter.Route(ICall call)
[xUnit.net 00:00:00.20]            at NSubstitute.Proxies.CastleDynamicProxy.CastleForwardingInterceptor.Intercept(IInvocation invocation)
[xUnit.net 00:00:00.20]            at Castle.DynamicProxy.AbstractInvocation.Proceed()
[xUnit.net 00:00:00.20]            at NSubstitute.Proxies.CastleDynamicProxy.ProxyIdInterceptor.Intercept(IInvocation invocation)
[xUnit.net 00:00:00.20]            at Castle.DynamicProxy.AbstractInvocation.Proceed()
[xUnit.net 00:00:00.20]            at Castle.Proxies.ObjectProxy_2.Log[TState](LogLevel logLevel, EventId eventId, TState state, Exception exception, Func`3 formatter)
[xUnit.net 00:00:00.20]         /Users/tomaszmolis/Projects/events-coordinator/tests/FetishCompass.UnitTests/Catalog/Commands/Handlers/ChangeOccasionVenueCommandHandlerTests.cs(46,0): at FetishCompass.UnitTests.Catalog.Commands.Handlers.ChangeOccasionVenueCommandHandlerTests.Handle_OccasionNotFound_ThrowsAndLogs()
[xUnit.net 00:00:00.20]         --- End of stack trace from previous location ---
[xUnit.net 00:00:00.20]       NSubstitute.Exceptions.ReceivedCallsException : Expected to receive a call matching:
[xUnit.net 00:00:00.20]       	Log&lt;Object&gt;(Error, any EventId, o =&gt; o.ToString().Contains("Error creating occasion"), any Exception, any Func&lt;Object, Exception, String&gt;)
[xUnit.net 00:00:00.20]       Actually received no matching calls.
[xUnit.net 00:00:00.20]       
[xUnit.net 00:00:00.20]       Stack Trace:
[xUnit.net 00:00:00.20]            at NSubstitute.Core.ReceivedCallsExceptionThrower.Throw(ICallSpecification callSpecification, IEnumerable`1 matchingCalls, IEnumerable`1 nonMatchingCalls, Quantity requiredQuantity)
[xUnit.net 00:00:00.20]            at NSubstitute.Routing.Handlers.CheckReceivedCallsHandler.Handle(ICall call)
[xUnit.net 00:00:00.20]            at NSubstitute.Routing.Route.Handle(ICall call)
[xUnit.net 00:00:00.20]            at NSubstitute.Core.CallRouter.Route(ICall call)
[xUnit.net 00:00:00.20]            at NSubstitute.Proxies.CastleDynamicProxy.CastleForwardingInterceptor.Intercept(IInvocation invocation)
[xUnit.net 00:00:00.20]            at Castle.DynamicProxy.AbstractInvocation.Proceed()
[xUnit.net 00:00:00.20]            at NSubstitute.Proxies.CastleDynamicProxy.ProxyIdInterceptor.Intercept(IInvocation invocation)
[xUnit.net 00:00:00.20]            at Castle.DynamicProxy.AbstractInvocation.Proceed()
[xUnit.net 00:00:00.20]            at Castle.Proxies.ObjectProxy_5.Log[TState](LogLevel logLevel, EventId eventId, TState state, Exception exception, Func`3 formatter)
[xUnit.net 00:00:00.20]         /Users/tomaszmolis/Projects/events-coordinator/tests/FetishCompass.UnitTests/Catalog/Commands/Handlers/CreateOccasionCommandHandlerTests.cs(61,0): at FetishCompass.UnitTests.Catalog.Commands.Handlers.CreateOccasionCommandHandlerTests.Handle_Exception_LogsAndThrows()
[xUnit.net 00:00:00.20]         --- End of stack trace from previous location ---
[xUnit.net 00:00:00.22]       NSubstitute.Exceptions.ReceivedCallsException : Expected to receive a call matching:
[xUnit.net 00:00:00.22]       	Log&lt;Object&gt;(Warning, any EventId, o =&gt; o.ToString().Contains("not found"), &lt;null&gt;, any Func&lt;Object, Exception, String&gt;)
[xUnit.net 00:00:00.22]       Actually received no matching calls.
[xUnit.net 00:00:00.22]       
[xUnit.net 00:00:00.22]       Stack Trace:
[xUnit.net 00:00:00.22]            at NSubstitute.Core.ReceivedCallsExceptionThrower.Throw(ICallSpecification callSpecification, IEnumerable`1 matchingCalls, IEnumerable`1 nonMatchingCalls, Quantity requiredQuantity)
[xUnit.net 00:00:00.22]            at NSubstitute.Routing.Handlers.CheckReceivedCallsHandler.Handle(ICall call)
[xUnit.net 00:00:00.22]            at NSubstitute.Routing.Route.Handle(ICall call)
[xUnit.net 00:00:00.22]            at NSubstitute.Core.CallRouter.Route(ICall call)
[xUnit.net 00:00:00.22]            at NSubstitute.Proxies.CastleDynamicProxy.CastleForwardingInterceptor.Intercept(IInvocation invocation)
[xUnit.net 00:00:00.22]            at Castle.DynamicProxy.AbstractInvocation.Proceed()
[xUnit.net 00:00:00.22]            at NSubstitute.Proxies.CastleDynamicProxy.ProxyIdInterceptor.Intercept(IInvocation invocation)
[xUnit.net 00:00:00.22]            at Castle.DynamicProxy.AbstractInvocation.Proceed()
[xUnit.net 00:00:00.22]            at Castle.Proxies.ObjectProxy_3.Log[TState](LogLevel logLevel, EventId eventId, TState state, Exception exception, Func`3 formatter)
[xUnit.net 00:00:00.22]         /Users/tomaszmolis/Projects/events-coordinator/tests/FetishCompass.UnitTests/Catalog/Commands/Handlers/ChangeOccasionScheduleCommandHandlerTests.cs(47,0): at FetishCompass.UnitTests.Catalog.Commands.Handlers.ChangeOccasionScheduleCommandHandlerTests.Handle_OccasionNotFound_ThrowsAndLogs()
[xUnit.net 00:00:00.22]         --- End of stack trace from previous location ---
[xUnit.net 00:00:00.22]       System.ArgumentException : Can not instantiate proxy of class: FetishCompass.Domain.Catalog.Model.Occasion.
[xUnit.net 00:00:00.22]       Could not find a parameterless constructor. (Parameter 'constructorArguments')
[xUnit.net 00:00:00.22]       ---- System.MissingMethodException : Constructor on type 'Castle.Proxies.OccasionProxy' not found.
[xUnit.net 00:00:00.22]       Stack Trace:
[xUnit.net 00:00:00.22]            at Castle.DynamicProxy.ProxyGenerator.CreateClassProxyInstance(Type proxyType, List`1 proxyArguments, Type classToProxy, Object[] constructorArguments)
[xUnit.net 00:00:00.22]            at Castle.DynamicProxy.ProxyGenerator.CreateClassProxy(Type classToProxy, Type[] additionalInterfacesToProxy, ProxyGenerationOptions options, Object[] constructorArguments, IInterceptor[] interceptors)
[xUnit.net 00:00:00.22]            at NSubstitute.Proxies.CastleDynamicProxy.CastleDynamicProxyFactory.CreateProxyUsingCastleProxyGenerator(Type typeToProxy, Type[] additionalInterfaces, Object[] constructorArguments, IInterceptor[] interceptors, ProxyGenerationOptions proxyGenerationOptions)
[xUnit.net 00:00:00.22]            at NSubstitute.Proxies.CastleDynamicProxy.CastleDynamicProxyFactory.GenerateTypeProxy(ICallRouter callRouter, Type typeToProxy, Type[] additionalInterfaces, Object[] constructorArguments)
[xUnit.net 00:00:00.22]            at NSubstitute.Proxies.CastleDynamicProxy.CastleDynamicProxyFactory.GenerateProxy(ICallRouter callRouter, Type typeToProxy, Type[] additionalInterfaces, Object[] constructorArguments)
[xUnit.net 00:00:00.22]            at NSubstitute.Core.SubstituteFactory.Create(Type[] typesToProxy, Object[] constructorArguments, Boolean callBaseByDefault)
[xUnit.net 00:00:00.22]            at NSubstitute.Core.SubstituteFactory.Create(Type[] typesToProxy, Object[] constructorArguments)
[xUnit.net 00:00:00.22]            at NSubstitute.Substitute.For(Type[] typesToProxy, Object[] constructorArguments)
[xUnit.net 00:00:00.22]            at NSubstitute.Substitute.For[T](Object[] constructorArguments)
[xUnit.net 00:00:00.22]         /Users/tomaszmolis/Projects/events-coordinator/tests/FetishCompass.UnitTests/Catalog/Commands/Handlers/CancelOccasionCommandHandlerTests.cs(59,0): at FetishCompass.UnitTests.Catalog.Commands.Handlers.CancelOccasionCommandHandlerTests.Handle_Exception_LogsAndThrows()
[xUnit.net 00:00:00.22]         --- End of stack trace from previous location ---
[xUnit.net 00:00:00.22]         ----- Inner Stack Trace -----
[xUnit.net 00:00:00.22]            at System.RuntimeType.CreateInstanceImpl(BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture)
[xUnit.net 00:00:00.22]            at Castle.DynamicProxy.ProxyGenerator.CreateClassProxyInstance(Type proxyType, List`1 proxyArguments, Type classToProxy, Object[] constructorArguments)
[xUnit.net 00:00:00.22]       System.ArgumentException : Can not instantiate proxy of class: FetishCompass.Domain.Catalog.Model.Occasion.
[xUnit.net 00:00:00.22]       Could not find a parameterless constructor. (Parameter 'constructorArguments')
[xUnit.net 00:00:00.22]       ---- System.MissingMethodException : Constructor on type 'Castle.Proxies.OccasionProxy' not found.
[xUnit.net 00:00:00.22]       Stack Trace:
[xUnit.net 00:00:00.22]            at Castle.DynamicProxy.ProxyGenerator.CreateClassProxyInstance(Type proxyType, List`1 proxyArguments, Type classToProxy, Object[] constructorArguments)
[xUnit.net 00:00:00.22]            at Castle.DynamicProxy.ProxyGenerator.CreateClassProxy(Type classToProxy, Type[] additionalInterfacesToProxy, ProxyGenerationOptions options, Object[] constructorArguments, IInterceptor[] interceptors)
[xUnit.net 00:00:00.22]            at NSubstitute.Proxies.CastleDynamicProxy.CastleDynamicProxyFactory.CreateProxyUsingCastleProxyGenerator(Type typeToProxy, Type[] additionalInterfaces, Object[] constructorArguments, IInterceptor[] interceptors, ProxyGenerationOptions proxyGenerationOptions)
[xUnit.net 00:00:00.22]            at NSubstitute.Proxies.CastleDynamicProxy.CastleDynamicProxyFactory.GenerateTypeProxy(ICallRouter callRouter, Type typeToProxy, Type[] additionalInterfaces, Object[] constructorArguments)
[xUnit.net 00:00:00.22]            at NSubstitute.Proxies.CastleDynamicProxy.CastleDynamicProxyFactory.GenerateProxy(ICallRouter callRouter, Type typeToProxy, Type[] additionalInterfaces, Object[] constructorArguments)
[xUnit.net 00:00:00.22]            at NSubstitute.Core.SubstituteFactory.Create(Type[] typesToProxy, Object[] constructorArguments, Boolean callBaseByDefault)
[xUnit.net 00:00:00.22]            at NSubstitute.Core.SubstituteFactory.Create(Type[] typesToProxy, Object[] constructorArguments)
[xUnit.net 00:00:00.22]            at NSubstitute.Substitute.For(Type[] typesToProxy, Object[] constructorArguments)
[xUnit.net 00:00:00.22]            at NSubstitute.Substitute.For[T](Object[] constructorArguments)
[xUnit.net 00:00:00.22]         /Users/tomaszmolis/Projects/events-coordinator/tests/FetishCompass.UnitTests/Catalog/Commands/Handlers/ChangeOccasionScheduleCommandHandlerTests.cs(62,0): at FetishCompass.UnitTests.Catalog.Commands.Handlers.ChangeOccasionScheduleCommandHandlerTests.Handle_Exception_LogsAndThrows()
[xUnit.net 00:00:00.22]         --- End of stack trace from previous location ---
[xUnit.net 00:00:00.22]         ----- Inner Stack Trace -----
[xUnit.net 00:00:00.22]            at System.RuntimeType.CreateInstanceImpl(BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture)
[xUnit.net 00:00:00.22]            at Castle.DynamicProxy.ProxyGenerator.CreateClassProxyInstance(Type proxyType, List`1 proxyArguments, Type classToProxy, Object[] constructorArguments)
[xUnit.net 00:00:00.22]       System.ArgumentException : Can not instantiate proxy of class: FetishCompass.Domain.Catalog.Model.Occasion.
[xUnit.net 00:00:00.22]       Could not find a parameterless constructor. (Parameter 'constructorArguments')
[xUnit.net 00:00:00.23]       ---- System.MissingMethodException : Constructor on type 'Castle.Proxies.OccasionProxy' not found.
[xUnit.net 00:00:00.23]       Stack Trace:
[xUnit.net 00:00:00.23]            at Castle.DynamicProxy.ProxyGenerator.CreateClassProxyInstance(Type proxyType, List`1 proxyArguments, Type classToProxy, Object[] constructorArguments)
[xUnit.net 00:00:00.23]            at Castle.DynamicProxy.ProxyGenerator.CreateClassProxy(Type classToProxy, Type[] additionalInterfacesToProxy, ProxyGenerationOptions options, Object[] constructorArguments, IInterceptor[] interceptors)
[xUnit.net 00:00:00.23]            at NSubstitute.Proxies.CastleDynamicProxy.CastleDynamicProxyFactory.CreateProxyUsingCastleProxyGenerator(Type typeToProxy, Type[] additionalInterfaces, Object[] constructorArguments, IInterceptor[] interceptors, ProxyGenerationOptions proxyGenerationOptions)
[xUnit.net 00:00:00.23]            at NSubstitute.Proxies.CastleDynamicProxy.CastleDynamicProxyFactory.GenerateTypeProxy(ICallRouter callRouter, Type typeToProxy, Type[] additionalInterfaces, Object[] constructorArguments)
[xUnit.net 00:00:00.23]            at NSubstitute.Proxies.CastleDynamicProxy.CastleDynamicProxyFactory.GenerateProxy(ICallRouter callRouter, Type typeToProxy, Type[] additionalInterfaces, Object[] constructorArguments)
[xUnit.net 00:00:00.23]            at NSubstitute.Core.SubstituteFactory.Create(Type[] typesToProxy, Object[] constructorArguments, Boolean callBaseByDefault)
[xUnit.net 00:00:00.23]            at NSubstitute.Core.SubstituteFactory.Create(Type[] typesToProxy, Object[] constructorArguments)
[xUnit.net 00:00:00.23]            at NSubstitute.Substitute.For(Type[] typesToProxy, Object[] constructorArguments)
[xUnit.net 00:00:00.23]            at NSubstitute.Substitute.For[T](Object[] constructorArguments)
[xUnit.net 00:00:00.23]         /Users/tomaszmolis/Projects/events-coordinator/tests/FetishCompass.UnitTests/Catalog/Commands/Handlers/UpdateOccasionDetailCommandHandlerTests.cs(23,0): at FetishCompass.UnitTests.Catalog.Commands.Handlers.UpdateOccasionDetailCommandHandlerTests.Handle_OccasionExists_UpdatesAndSaves()
[xUnit.net 00:00:00.23]         --- End of stack trace from previous location ---
[xUnit.net 00:00:00.23]         ----- Inner Stack Trace -----
[xUnit.net 00:00:00.23]            at System.RuntimeType.CreateInstanceImpl(BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture)
[xUnit.net 00:00:00.23]            at Castle.DynamicProxy.ProxyGenerator.CreateClassProxyInstance(Type proxyType, List`1 proxyArguments, Type classToProxy, Object[] constructorArguments)
[xUnit.net 00:00:00.23]       System.ArgumentException : Can not instantiate proxy of class: FetishCompass.Domain.Catalog.Model.Occasion.
[xUnit.net 00:00:00.23]       Could not find a parameterless constructor. (Parameter 'constructorArguments')
[xUnit.net 00:00:00.23]       ---- System.MissingMethodException : Constructor on type 'Castle.Proxies.OccasionProxy' not found.
[xUnit.net 00:00:00.23]       Stack Trace:
[xUnit.net 00:00:00.23]            at Castle.DynamicProxy.ProxyGenerator.CreateClassProxyInstance(Type proxyType, List`1 proxyArguments, Type classToProxy, Object[] constructorArguments)
[xUnit.net 00:00:00.23]            at Castle.DynamicProxy.ProxyGenerator.CreateClassProxy(Type classToProxy, Type[] additionalInterfacesToProxy, ProxyGenerationOptions options, Object[] constructorArguments, IInterceptor[] interceptors)
[xUnit.net 00:00:00.23]            at NSubstitute.Proxies.CastleDynamicProxy.CastleDynamicProxyFactory.CreateProxyUsingCastleProxyGenerator(Type typeToProxy, Type[] additionalInterfaces, Object[] constructorArguments, IInterceptor[] interceptors, ProxyGenerationOptions proxyGenerationOptions)
[xUnit.net 00:00:00.23]            at NSubstitute.Proxies.CastleDynamicProxy.CastleDynamicProxyFactory.GenerateTypeProxy(ICallRouter callRouter, Type typeToProxy, Type[] additionalInterfaces, Object[] constructorArguments)
[xUnit.net 00:00:00.23]            at NSubstitute.Proxies.CastleDynamicProxy.CastleDynamicProxyFactory.GenerateProxy(ICallRouter callRouter, Type typeToProxy, Type[] additionalInterfaces, Object[] constructorArguments)
[xUnit.net 00:00:00.23]            at NSubstitute.Core.SubstituteFactory.Create(Type[] typesToProxy, Object[] constructorArguments, Boolean callBaseByDefault)
[xUnit.net 00:00:00.23]            at NSubstitute.Core.SubstituteFactory.Create(Type[] typesToProxy, Object[] constructorArguments)
[xUnit.net 00:00:00.23]            at NSubstitute.Substitute.For(Type[] typesToProxy, Object[] constructorArguments)
[xUnit.net 00:00:00.23]            at NSubstitute.Substitute.For[T](Object[] constructorArguments)
[xUnit.net 00:00:00.23]         /Users/tomaszmolis/Projects/events-coordinator/tests/FetishCompass.UnitTests/Catalog/Commands/Handlers/CancelOccasionCommandHandlerTests.cs(23,0): at FetishCompass.UnitTests.Catalog.Commands.Handlers.CancelOccasionCommandHandlerTests.Handle_OccasionExists_CancelsAndSaves()
[xUnit.net 00:00:00.23]         --- End of stack trace from previous location ---
[xUnit.net 00:00:00.23]         ----- Inner Stack Trace -----
[xUnit.net 00:00:00.23]            at System.RuntimeType.CreateInstanceImpl(BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture)
[xUnit.net 00:00:00.23]            at Castle.DynamicProxy.ProxyGenerator.CreateClassProxyInstance(Type proxyType, List`1 proxyArguments, Type classToProxy, Object[] constructorArguments)
[xUnit.net 00:00:00.23]       System.ArgumentException : Can not instantiate proxy of class: FetishCompass.Domain.Catalog.Model.Occasion.
[xUnit.net 00:00:00.23]       Could not find a parameterless constructor. (Parameter 'constructorArguments')
[xUnit.net 00:00:00.23]       ---- System.MissingMethodException : Constructor on type 'Castle.Proxies.OccasionProxy' not found.
[xUnit.net 00:00:00.23]       Stack Trace:
[xUnit.net 00:00:00.23]            at Castle.DynamicProxy.ProxyGenerator.CreateClassProxyInstance(Type proxyType, List`1 proxyArguments, Type classToProxy, Object[] constructorArguments)
[xUnit.net 00:00:00.23]            at Castle.DynamicProxy.ProxyGenerator.CreateClassProxy(Type classToProxy, Type[] additionalInterfacesToProxy, ProxyGenerationOptions options, Object[] constructorArguments, IInterceptor[] interceptors)
[xUnit.net 00:00:00.23]            at NSubstitute.Proxies.CastleDynamicProxy.CastleDynamicProxyFactory.CreateProxyUsingCastleProxyGenerator(Type typeToProxy, Type[] additionalInterfaces, Object[] constructorArguments, IInterceptor[] interceptors, ProxyGenerationOptions proxyGenerationOptions)
[xUnit.net 00:00:00.23]            at NSubstitute.Proxies.CastleDynamicProxy.CastleDynamicProxyFactory.GenerateTypeProxy(ICallRouter callRouter, Type typeToProxy, Type[] additionalInterfaces, Object[] constructorArguments)
[xUnit.net 00:00:00.23]            at NSubstitute.Proxies.CastleDynamicProxy.CastleDynamicProxyFactory.GenerateProxy(ICallRouter callRouter, Type typeToProxy, Type[] additionalInterfaces, Object[] constructorArguments)
[xUnit.net 00:00:00.23]            at NSubstitute.Core.SubstituteFactory.Create(Type[] typesToProxy, Object[] constructorArguments, Boolean callBaseByDefault)
[xUnit.net 00:00:00.23]            at NSubstitute.Core.SubstituteFactory.Create(Type[] typesToProxy, Object[] constructorArguments)
[xUnit.net 00:00:00.23]            at NSubstitute.Substitute.For(Type[] typesToProxy, Object[] constructorArguments)
[xUnit.net 00:00:00.23]            at NSubstitute.Substitute.For[T](Object[] constructorArguments)
[xUnit.net 00:00:00.23]         /Users/tomaszmolis/Projects/events-coordinator/tests/FetishCompass.UnitTests/Catalog/Commands/Handlers/ChangeOccasionScheduleCommandHandlerTests.cs(24,0): at FetishCompass.UnitTests.Catalog.Commands.Handlers.ChangeOccasionScheduleCommandHandlerTests.Handle_OccasionExists_ChangesScheduleAndSaves()
[xUnit.net 00:00:00.23]         --- End of stack trace from previous location ---
[xUnit.net 00:00:00.23]         ----- Inner Stack Trace -----
[xUnit.net 00:00:00.23]            at System.RuntimeType.CreateInstanceImpl(BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture)
[xUnit.net 00:00:00.23]            at Castle.DynamicProxy.ProxyGenerator.CreateClassProxyInstance(Type proxyType, List`1 proxyArguments, Type classToProxy, Object[] constructorArguments)
[xUnit.net 00:00:00.23]       System.ArgumentException : Can not instantiate proxy of class: FetishCompass.Domain.Catalog.Model.Occasion.
[xUnit.net 00:00:00.23]       Could not find a parameterless constructor. (Parameter 'constructorArguments')
[xUnit.net 00:00:00.23]       ---- System.MissingMethodException : Constructor on type 'Castle.Proxies.OccasionProxy' not found.
[xUnit.net 00:00:00.23]       Stack Trace:
[xUnit.net 00:00:00.23]            at Castle.DynamicProxy.ProxyGenerator.CreateClassProxyInstance(Type proxyType, List`1 proxyArguments, Type classToProxy, Object[] constructorArguments)
[xUnit.net 00:00:00.23]            at Castle.DynamicProxy.ProxyGenerator.CreateClassProxy(Type classToProxy, Type[] additionalInterfacesToProxy, ProxyGenerationOptions options, Object[] constructorArguments, IInterceptor[] interceptors)
[xUnit.net 00:00:00.23]            at NSubstitute.Proxies.CastleDynamicProxy.CastleDynamicProxyFactory.CreateProxyUsingCastleProxyGenerator(Type typeToProxy, Type[] additionalInterfaces, Object[] constructorArguments, IInterceptor[] interceptors, ProxyGenerationOptions proxyGenerationOptions)
[xUnit.net 00:00:00.23]            at NSubstitute.Proxies.CastleDynamicProxy.CastleDynamicProxyFactory.GenerateTypeProxy(ICallRouter callRouter, Type typeToProxy, Type[] additionalInterfaces, Object[] constructorArguments)
[xUnit.net 00:00:00.23]            at NSubstitute.Proxies.CastleDynamicProxy.CastleDynamicProxyFactory.GenerateProxy(ICallRouter callRouter, Type typeToProxy, Type[] additionalInterfaces, Object[] constructorArguments)
[xUnit.net 00:00:00.23]            at NSubstitute.Core.SubstituteFactory.Create(Type[] typesToProxy, Object[] constructorArguments, Boolean callBaseByDefault)
[xUnit.net 00:00:00.23]            at NSubstitute.Core.SubstituteFactory.Create(Type[] typesToProxy, Object[] constructorArguments)
[xUnit.net 00:00:00.23]            at NSubstitute.Substitute.For(Type[] typesToProxy, Object[] constructorArguments)
[xUnit.net 00:00:00.23]            at NSubstitute.Substitute.For[T](Object[] constructorArguments)
[xUnit.net 00:00:00.23]         /Users/tomaszmolis/Projects/events-coordinator/tests/FetishCompass.UnitTests/Catalog/Commands/Handlers/UpdateOccasionDetailCommandHandlerTests.cs(59,0): at FetishCompass.UnitTests.Catalog.Commands.Handlers.UpdateOccasionDetailCommandHandlerTests.Handle_Exception_LogsAndThrows()
[xUnit.net 00:00:00.23]         --- End of stack trace from previous location ---
[xUnit.net 00:00:00.23]         ----- Inner Stack Trace -----
[xUnit.net 00:00:00.23]            at System.RuntimeType.CreateInstanceImpl(BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture)
[xUnit.net 00:00:00.23]            at Castle.DynamicProxy.ProxyGenerator.CreateClassProxyInstance(Type proxyType, List`1 proxyArguments, Type classToProxy, Object[] constructorArguments)
[xUnit.net 00:00:00.23]   Finished:    FetishCompass.UnitTests
</StdOut>
    </Output>
    <RunInfos>
      <RunInfo computerName="MacBook-Air-Tomasz" outcome="Error" timestamp="2025-09-11T21:40:57.2511600+02:00">
        <Text>[xUnit.net 00:00:00.19]     FetishCompass.UnitTests.Catalog.Commands.Handlers.ChangeOccasionVenueCommandHandlerTests.Handle_Exception_LogsAndThrows [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="MacBook-Air-Tomasz" outcome="Error" timestamp="2025-09-11T21:40:57.2562180+02:00">
        <Text>[xUnit.net 00:00:00.19]     FetishCompass.UnitTests.Catalog.Commands.Handlers.ChangeOccasionVenueCommandHandlerTests.Handle_OccasionExists_ChangesVenueAndSaves [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="MacBook-Air-Tomasz" outcome="Error" timestamp="2025-09-11T21:40:57.2581350+02:00">
        <Text>[xUnit.net 00:00:00.20]     FetishCompass.UnitTests.Catalog.Commands.Handlers.UpdateOccasionDetailCommandHandlerTests.Handle_OccasionNotFound_ThrowsAndLogs [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="MacBook-Air-Tomasz" outcome="Error" timestamp="2025-09-11T21:40:57.2647650+02:00">
        <Text>[xUnit.net 00:00:00.20]     FetishCompass.UnitTests.Catalog.Commands.Handlers.CancelOccasionCommandHandlerTests.Handle_OccasionNotFound_ThrowsAndLogs [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="MacBook-Air-Tomasz" outcome="Error" timestamp="2025-09-11T21:40:57.2650780+02:00">
        <Text>[xUnit.net 00:00:00.20]     FetishCompass.UnitTests.Catalog.Commands.Handlers.ChangeOccasionVenueCommandHandlerTests.Handle_OccasionNotFound_ThrowsAndLogs [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="MacBook-Air-Tomasz" outcome="Error" timestamp="2025-09-11T21:40:57.2658080+02:00">
        <Text>[xUnit.net 00:00:00.20]     FetishCompass.UnitTests.Catalog.Commands.Handlers.CreateOccasionCommandHandlerTests.Handle_Exception_LogsAndThrows [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="MacBook-Air-Tomasz" outcome="Error" timestamp="2025-09-11T21:40:57.3421590+02:00">
        <Text>[xUnit.net 00:00:00.22]     FetishCompass.UnitTests.Catalog.Commands.Handlers.ChangeOccasionScheduleCommandHandlerTests.Handle_OccasionNotFound_ThrowsAndLogs [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="MacBook-Air-Tomasz" outcome="Error" timestamp="2025-09-11T21:40:57.3422520+02:00">
        <Text>[xUnit.net 00:00:00.22]     FetishCompass.UnitTests.Catalog.Commands.Handlers.CancelOccasionCommandHandlerTests.Handle_Exception_LogsAndThrows [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="MacBook-Air-Tomasz" outcome="Error" timestamp="2025-09-11T21:40:57.3423470+02:00">
        <Text>[xUnit.net 00:00:00.22]     FetishCompass.UnitTests.Catalog.Commands.Handlers.ChangeOccasionScheduleCommandHandlerTests.Handle_Exception_LogsAndThrows [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="MacBook-Air-Tomasz" outcome="Error" timestamp="2025-09-11T21:40:57.3424480+02:00">
        <Text>[xUnit.net 00:00:00.22]     FetishCompass.UnitTests.Catalog.Commands.Handlers.UpdateOccasionDetailCommandHandlerTests.Handle_OccasionExists_UpdatesAndSaves [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="MacBook-Air-Tomasz" outcome="Error" timestamp="2025-09-11T21:40:57.3425400+02:00">
        <Text>[xUnit.net 00:00:00.23]     FetishCompass.UnitTests.Catalog.Commands.Handlers.CancelOccasionCommandHandlerTests.Handle_OccasionExists_CancelsAndSaves [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="MacBook-Air-Tomasz" outcome="Error" timestamp="2025-09-11T21:40:57.3426390+02:00">
        <Text>[xUnit.net 00:00:00.23]     FetishCompass.UnitTests.Catalog.Commands.Handlers.ChangeOccasionScheduleCommandHandlerTests.Handle_OccasionExists_ChangesScheduleAndSaves [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="MacBook-Air-Tomasz" outcome="Error" timestamp="2025-09-11T21:40:57.3427450+02:00">
        <Text>[xUnit.net 00:00:00.23]     FetishCompass.UnitTests.Catalog.Commands.Handlers.UpdateOccasionDetailCommandHandlerTests.Handle_Exception_LogsAndThrows [FAIL]</Text>
      </RunInfo>
    </RunInfos>
  </ResultSummary>
</TestRun>